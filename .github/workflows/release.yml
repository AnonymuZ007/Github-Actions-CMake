on:
  push:
    tags:
      - 'v*'

name: Create Release

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: configure
      run: |
        mkdir build
        cd build
        cmake ..
    - name: build
      run: cmake --build build --config Debug
    - name: move artifact
      run: |
        mkdir -p artifact
        cp ./build/helloworld ./artifact/helloworld-linux

    - uses: actions/upload-artifact@v1
      name: upload linux build
      with:
        name: helloworld-linux
        path: ./artifact/helloworld-linux

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: configure
      run: |
        mkdir build
        cd build
        cmake ..
    - name: build
      run: cmake --build build --config Debug
    - name: move artifact
      run: |
        mkdir artifact
        Copy-Item "build\debug\helloworld.exe" -Destination "artifact\helloworld-windows.exe"

    - uses: actions/upload-artifact@v1
      name: upload windows build
      with:
        name: helloworld-windows
        path: ./artifact/helloworld-windows.exe

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: configure
      run: |
        mkdir build
        cd build
        cmake ..
    - name: build
      run: cmake --build build --config Debug
    - name: move artifact
      run: |
        mkdir -p artifact
        cp ./build/helloworld ./artifact/helloworld-macos

    - uses: actions/upload-artifact@v1
      name: upload macos build
      with:
        name: helloworld-macos
        path: ./artifact/helloworld-macos

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - uses: actions/download-artifact@v1
        name: Upload linux build
        with:
          name: helloworld-linux
          path: .
      - uses: actions/download-artifact@v1
        name: Upload windows build
        with:
          name: helloworld-windows
          path: .
      - uses: actions/download-artifact@v1
        name: Upload macos build
        with:
          name: helloworld-macos
          path: .
      - name: Zip all
        run: |
          ls
          zip build-linux helloworld-linux
          zip build-windows helloworld-windows.exe
          zip build-macos helloworld-macos
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: New release!
          draft: false
          prerelease: false
      - name: Attach Linux Release
        id: upload-linux-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  
          asset_path: ./build-linux.zip
          asset_name: build-linux.zip
          asset_content_type: application/zip
      - name: Attach Windows Release
        id: upload-windows-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  
          asset_path: ./build-windows.zip
          asset_name: build-windows.zip
          asset_content_type: application/zip
      - name: Attach MacOS Release
        id: upload-macos-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}  
          asset_path: ./build-macos.zip
          asset_name: build-macos.zip
          asset_content_type: application/zip

